* 예외 처리하기
	- 예외(Exception): 처리하지 못한 에러
	- 노드 스레드를 멈춤
	- 노드는 기본적으로 싱글 스레드라 스레드가 멈춘다는 것은 프로세스가 멈추는 것
	- 에러 처리는 필수
	
* try catch 문
	- 기본적으로 try catch 문으로 예외를 처리
	- 에러가 발생할 만한 곳을 try catch로 감쌈
	
* 예외 
	- 최후의 수단으로 사용
	- 콜백 함수의 동작이 보장되지 않음
	- 따라서 복구 작업용으로 쓰는 것은 부적합
	- 에러 내용 기록 용으로만 쓰는게 좋음

	process.on('uncaughtException', (err) => {
		console.error('예기치 못한 에러', err)
	})

	setInterval(() => {
		throw new Error('서버를 고장내주마!');
	}, 1000)

	setTimeout(() => {
		console.log('실행됩니다.')
	}, 2000)
	
* 프로세스 종료하기
	- window
		netstat -ano | findstr 포트
		taskkill /f /pid 프로세스아이디 /f
		
	- 맥/리눅스
		lsof - i tcp:포트
		kill -9 프로세스아이디
		