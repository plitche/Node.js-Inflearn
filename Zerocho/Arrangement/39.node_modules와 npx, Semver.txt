npm i -g rimraf : global
	> 전역설치로 dependencies에 기록이 안됨
	> 설치하면 rimraf라는 명령어 자체를 사용할 수 있게 됨
	
npm i -D rimraf
	> 개발용으로만 설치하였을때 명령어로 사용을 하기 위해서는 npx rimraf처럼 npx를 붙여준다.
	
* node_modules
	- npm install 시 node_modules 폴더 생성
		> 내부에 설치한 패키지들이 들어있음
		> express 외에도 express와 의존 관계가 있는 패키지들이 모두 설치됨
	- pacakage-lock.json도 생성되어 패키지 간 의존 관계를 명확하게 표시함
	
* SemVer 버저닝
	- 노드 패키지의 버전은 SemVer(유의적 버저닝) 방식을 따름
		> Major(주 버전), Minor(부 버전), Pathc(수 버전)
		
		> 노드에서는 배포를 할 때 항상 버전을 올려야 함
		> Major: 하위 버전과 호환되지 않은 수정 사항이 생겼을때 올림
		> Minor: 하위 버전과 호환되는 수정 사항이 생겼을 떄 올림
		> Patch: 기능에 버그를 해결했을 때 올림
		
* 버전 기호 사용하기
	- 버전 앞에 기호를 붙여 의미를 더함
		> ^1.1.1: 패키지 업데이트 시 minor 버전까지만 업데이트 됨(2.0.0버전은 안 됨)
		> ~1.1.1: 패키지 업데이트 시 patch 버전까지만 업데이트 됨(1.2.0버전은 안 됨)
		> >=, >=, >, <: 이상, 이하, 초과 미만
		> @latest는 최신을 의미
		> @next로 가장 최신 배포판 사용 가능(불안정함)
		> 알파/베타/RC 버전이 존재할 수도 있음
		
